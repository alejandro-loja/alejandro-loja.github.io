{"version":3,"sources":["pages/NavBar/index.jsx","pages/AboutMe/index.jsx","pages/Footer/index.jsx","components/ProjectCard/index.jsx","pages/Portfolio/index.jsx","pages/NoMatch/index.jsx","App.js","serviceWorker.js","index.js"],"names":["NavBar","react_default","a","createElement","className","href","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","styles","imageStyles","height","width","AboutMe","style","src","alt","Footer","cardStyles","imageStyle","ProjectCard","props","title","gitLink","siteLink","Portfolio","projects","map","project","index","key","image","github","website","NoMatch","App","react_router_dom","pages_NavBar","react_router","exact","path","component","pages_Footer","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b23aa76e.chunk.js","sourcesContent":["import React from \"react\";\n// import { Link } from \"react-router-dom\";\n\nfunction NavBar() {\n    return (\n        <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark p-3 mb-4\">\n            <a className=\"navbar-brand font-weight-bold mr-4\" href=\"/\">Alejandro's Portfolio</a>\n            <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\"\n                aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                <span className=\"navbar-toggler-icon\"></span>\n            </button>\n            \n            <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\n                <ul className=\"navbar-nav\">\n                    <li className=\"nav-item\">\n                        <a className=\"nav-link\" href=\"/\">About Me<span className=\"sr-only\">(current)</span></a>\n                    </li>\n                    <li className=\"nav-item\">\n                        <a className=\"nav-link\" href=\"/portfolio\">Portfolio</a>\n                    </li>\n                </ul>\n            </div>\n        </nav>\n    )\n};\n\nexport default NavBar","import React from \"react\";\n\nconst styles = {\n  imageStyles: {\n    height: \"150px\",\n    width: \"150px\"\n  }\n};\n\nfunction AboutMe() {\n  return (\n    // This main covers the about me and the contact me.\n    <div id=\"main\">\n      {/* About ME */}\n      <div>\n        <div className=\"offset-md-1 col-md-10 offset-sm-1 col-sm-10 shadow bg-white border p-4 clearfix\">\n          <h2 className=\"m-3\">About Me</h2>\n\n          <hr />\n\n          <div className=\"mb-5\">\n            <img\n              className=\"img-thumbnail float-left mr-4 text-wrap\"\n              style={styles.imageStyles}\n              src=\"assets/images/profilepic-portfolio.jpg\"\n              alt=\"Alejandro Loja\"\n            />\n            <p className=\"p-4\">\n              Welcome to my portfolio website. Here you will find projects I\n              worked on. I have experience with JavaScript, Node.Js, React.JS,\n              Express.js, CSS, HTML, MySQL, and MongoDB. I have also developed\n              MERN applications. On my portfolio page, I have a list of my most\n              recent projects.\n            </p>\n          </div>\n        </div>\n      </div>\n\n      {/* Contact Me */}\n      <div className=\"text-center\">\n        <div className=\"offset-md-3 col-md-6 offset-sm-4 col-sm-4 shadow bg-white p-5 mt-4\">\n          <a\n            href=\"https://github.com/alejandro-loja\"\n            className=\"btn btn-dark btn-lg text-white m-1\"\n          >\n            GitHub <i className=\"fab fa-github-square\" />\n          </a>\n          <a\n            href=\"https://www.linkedin.com/in/alejandro-loja/\"\n            className=\"btn btn-dark btn-lg text-white m-1\"\n          >\n            Linkedin <i className=\"fab fa-linkedin\" />\n          </a>\n          <a\n            href=\"mailto:alejandro.loja@gmail.com\"\n            className=\"btn btn-dark btn-lg text-white m-1\"\n          >\n            Email <i className=\"fas fa-envelope-square\" />\n          </a>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default AboutMe;\n","import React from \"react\";\n\nfunction Footer() {\n    return (\n        <footer className=\"footer bg-info text-light\">\n            <p className=\"p-3 text-center\">2019 &copy; Alejandro L. All Rights Reserved.</p>\n</footer>\n    );\n}\n\nexport default Footer;\n","import React from \"react\";\nconst cardStyles = {\n    width: \"14rem\"\n};\n\nconst imageStyle = {\n    height: '10rem'\n}\nexport function ProjectCard(props) {\n\n    const {src, alt, title, gitLink, siteLink} = props;\n    return (\n        <div className=\"m-4 col-xl-3 col-lg-3 col-md-3 col-sm-4 col-xs-1 text-light bg-secondary text-center\" style={cardStyles}>\n            <img src={src} style={imageStyle} className=\"card-img-top\" alt={alt} />\n            <div className=\"card-body p-0 pt-2\">\n                <h6 className=\"card-title p-1 m-0\">{title}</h6>\n                {/* <p className=\"card-text\">{desc}</p> */}\n                <div className=\"m-0 mb-1\">\n                <a href={gitLink} className=\"btn btn-info btn-sm m-1\">GitHub</a>\n                <a href={siteLink} className=\"btn btn-info btn-sm m-1\">Website</a>\n                </div>\n            </div>\n        </div>\n    )\n}\n\n","import React from \"react\";\nimport { ProjectCard } from \"../../components/ProjectCard\";\nimport projects from \"../../portfolioInfo.json\";\n\nfunction Portfolio() {\n  return (\n    <div className=\"mb-4\">\n      <div className=\"offset-lg-1 offset-xl-2 col-xl-8 col-lg-10 col-sm-12 shadow border bg-white\">\n        <h2 className=\"m-4\">Portfolio</h2>\n        <hr />\n        <div className=\"row justify-content-around\">\n          {projects.map((project, index) => (\n            <ProjectCard\n              key={index}\n              src={project.image}\n              alt={project.title}\n              title={project.title}\n              /// desc={project.desc}\n              gitLink={project.github}\n              siteLink={project.website}\n            />\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Portfolio;\n","import React from \"react\";\n\nfunction NoMatch () {\n    return (\n        <div>\n            Whoops! No Match\n        </div>\n    )\n}\n\nexport default NoMatch;","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n// import logo from './logo.svg';\n// import './App.css';\nimport NavBar from \"./pages/NavBar\";\nimport AboutMe from \"./pages/AboutMe\";\nimport Footer from \"./pages/Footer\";\nimport Portfolio from \"./pages/Portfolio\";\nimport NoMatch from \"./pages/NoMatch\";\n\n\nclass App extends Component {\n  //main container\n  render() {\n    return (\n      <Router>\n          <NavBar />\n          <Switch>\n            <Route exact path=\"/\" component={AboutMe} />\n            <Route exact path=\"/portfolio\" component={Portfolio} />\n            <Route component={NoMatch} />\n          </Switch>\n        <Footer />\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}